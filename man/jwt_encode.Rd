% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jwt.R
\name{jwt_encode_hmac}
\alias{jwt_decode_ec}
\alias{jwt_decode_hmac}
\alias{jwt_decode_rsa}
\alias{jwt_encode_ec}
\alias{jwt_encode_hmac}
\alias{jwt_encode_rsa}
\title{JSON Web Token}
\usage{
jwt_encode_hmac(payload = list(), secret, size = 256)

jwt_decode_hmac(jwt, secret)

jwt_encode_rsa(payload = list(), key, size = 256)

jwt_decode_rsa(jwt, pubkey)

jwt_encode_ec(payload = list(), key, size = 256)

jwt_decode_ec(jwt, pubkey)
}
\description{
Sign or verify a JSON web token.
}
\examples{
# HMAC signing
mysecret <- "This is super secret"
token <- list(name = "jeroen", session = 123456)
sig <- jwt_encode_hmac(token, mysecret)
jwt_decode_hmac(sig, mysecret)

# RSA encoding
mykey <- openssl::rsa_keygen()
pubkey <- as.list(mykey)$pubkey
sig <- jwt_encode_rsa(token, mykey)
jwt_decode_rsa(sig, pubkey)

# Same with EC
mykey <- openssl::ec_keygen()
pubkey <- as.list(mykey)$pubkey
sig <- jwt_encode_ec(token, mykey)
jwt_decode_ec(sig, pubkey)
}

